type FAQ @model @auth(rules: [{allow: public}]) {
  id: ID!
  question: String!
  answer: String!
  status: Status!
}

enum Cities {
  ISLAMABAD
  LAHORE
  KARACHI
  DIKHAN
  DGKHAN
  FAISALABAD
  HYDERABAD
  MULTAN
  PESHAWAR
  GUJARANWALA
  QUETTA
}

enum FoodCondition {
  FRESH
  LEFTOVER
}

enum Condition {
  NEW
  USED
}

enum UserType {
  SELLER
  REQUESTER
}

enum Status {
  ACTIVE
  BLOCK
}

type Rides @model @auth(rules: [{allow: public}]) {
  id: ID!
  image: AWSURL!
  price_per_seat: Int!
  title: String!
  no_of_seats: Int!
  UsersRides: Users @hasOne
  male_seats: Int!
  female_seats: Int!
  date_to_leave: AWSDate!
  time_to_leave: AWSTime!
  ride_destination: Cities!
  ride_from: Cities!
  expire_ride: AWSDateTime
}

type Foods @model @auth(rules: [{allow: public}]) {
  id: ID!
  image: AWSURL!
  condition: FoodCondition!
  price: Int!
  title: String!
  UsersFoods: Users @hasOne
  expire_foods: AWSDateTime
}

type Books @model @auth(rules: [{allow: public}]) {
  id: ID!
  image: AWSURL!
  condition: Condition!
  price: Int!
  title: String!
  UsersBooks: Users @hasOne
  expire_books: AWSDateTime
}

type Clothes @model @auth(rules: [{allow: public}]) {
  id: ID!
  image: AWSURL!
  condition: Condition!
  price: Int!
  UsersClothes: Users @hasOne
  title: String!
  expire_clothes: AWSDateTime
}

type Users @model @auth(rules: [{allow: public}]) {
  id: ID!
  first_name: String!
  last_name: String
  profile_pic: AWSURL
  phone: AWSPhone!
  email: AWSEmail!
  status: Status
  user_type: [UserType]
}
 